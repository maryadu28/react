{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amira\\\\OneDrive\\\\Bureau\\\\React\\\\openai-client\\\\src\\\\Components\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatApp() {\n  _s();\n  const [text, setText] = useState('');\n  const [response, setResponse] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const apiUrl = 'http://localhost:3001/api/chat'; // L'URL de votre serveur Node.js\n      const requestData = {\n        text\n      };\n      const response = await axios.post(apiUrl, requestData);\n      setResponse(response.data.message);\n    } catch (error) {\n      if (error.response) {\n        // Gérer les erreurs de réponse HTTP\n        console.error('Erreur de réponse HTTP :', error.response.status);\n        console.error('Données de réponse :', error.response.data);\n      } else if (error.request) {\n        // Gérer les erreurs de requête\n        console.error('Erreur de requête :', error.request);\n      } else {\n        // Gérer les erreurs inattendues\n        console.error('Erreur inattendue :', error.message);\n      }\n    }\n  };\n  useEffect(() => {\n    // Lorsque le composant est monté, vous pouvez exécuter la requête initiale ici si nécessaire\n    // Exemple : axios.post('http://localhost:3001/api/chat', { text: 'Votre texte ici' })\n    //   .then(response => {\n    //     const apiResponse = response.data.message;\n    //     setResponse(apiResponse);\n    //   })\n    //   .catch(error => {\n    //     console.error('Erreur lors de la requête initiale :', error);\n    //   });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Bienvenue dans le minichaGpt\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Entrez votre texte\",\n        value: text,\n        onChange: e => setText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Envoyer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), response && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"R\\xE9ponse : \", response]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n_s(ChatApp, \"Kn0pCI1kEisn7ZTq5zBOS3XzhHg=\");\n_c = ChatApp;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"ChatApp\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","ChatApp","_s","text","setText","response","setResponse","handleSubmit","e","preventDefault","apiUrl","requestData","post","data","message","error","console","status","request","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","_c","Chat","$RefreshReg$"],"sources":["C:/Users/amira/OneDrive/Bureau/React/openai-client/src/Components/Chat.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction ChatApp() {\r\n    const [text, setText] = useState('');\r\n    const [response, setResponse] = useState('');\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            const apiUrl = 'http://localhost:3001/api/chat'; // L'URL de votre serveur Node.js\r\n            const requestData = { text };\r\n\r\n            const response = await axios.post(apiUrl, requestData);\r\n\r\n            setResponse(response.data.message);\r\n        } catch (error) {\r\n            if (error.response) {\r\n                // Gérer les erreurs de réponse HTTP\r\n                console.error('Erreur de réponse HTTP :', error.response.status);\r\n                console.error('Données de réponse :', error.response.data);\r\n            } else if (error.request) {\r\n                // Gérer les erreurs de requête\r\n                console.error('Erreur de requête :', error.request);\r\n            } else {\r\n                // Gérer les erreurs inattendues\r\n                console.error('Erreur inattendue :', error.message);\r\n            }\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        // Lorsque le composant est monté, vous pouvez exécuter la requête initiale ici si nécessaire\r\n        // Exemple : axios.post('http://localhost:3001/api/chat', { text: 'Votre texte ici' })\r\n        //   .then(response => {\r\n        //     const apiResponse = response.data.message;\r\n        //     setResponse(apiResponse);\r\n        //   })\r\n        //   .catch(error => {\r\n        //     console.error('Erreur lors de la requête initiale :', error);\r\n        //   });\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <h1>Bienvenue dans le minichaGpt</h1>\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Entrez votre texte\"\r\n                    value={text}\r\n                    onChange={(e) => setText(e.target.value)}\r\n                />\r\n                <button type=\"submit\">Envoyer</button>\r\n            </form>\r\n            {response && <div>Réponse : {response}</div>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chat;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMW,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAI;MACA,MAAMC,MAAM,GAAG,gCAAgC,CAAC,CAAC;MACjD,MAAMC,WAAW,GAAG;QAAER;MAAK,CAAC;MAE5B,MAAME,QAAQ,GAAG,MAAMP,KAAK,CAACc,IAAI,CAACF,MAAM,EAAEC,WAAW,CAAC;MAEtDL,WAAW,CAACD,QAAQ,CAACQ,IAAI,CAACC,OAAO,CAAC;IACtC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZ,IAAIA,KAAK,CAACV,QAAQ,EAAE;QAChB;QACAW,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAACV,QAAQ,CAACY,MAAM,CAAC;QAChED,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAACV,QAAQ,CAACQ,IAAI,CAAC;MAC9D,CAAC,MAAM,IAAIE,KAAK,CAACG,OAAO,EAAE;QACtB;QACAF,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAACG,OAAO,CAAC;MACvD,CAAC,MAAM;QACH;QACAF,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAACD,OAAO,CAAC;MACvD;IACJ;EACJ,CAAC;EAEDjB,SAAS,CAAC,MAAM;IACZ;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAAA,CACH,EAAE,EAAE,CAAC;EAEN,oBACIG,OAAA;IAAAmB,QAAA,gBACInB,OAAA;MAAAmB,QAAA,EAAI;IAA4B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrCvB,OAAA;MAAMwB,QAAQ,EAAEjB,YAAa;MAAAY,QAAA,gBACzBnB,OAAA;QACIyB,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,oBAAoB;QAChCC,KAAK,EAAExB,IAAK;QACZyB,QAAQ,EAAGpB,CAAC,IAAKJ,OAAO,CAACI,CAAC,CAACqB,MAAM,CAACF,KAAK;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5C,CAAC,eACFvB,OAAA;QAAQyB,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CAAC,EACNlB,QAAQ,iBAAIL,OAAA;MAAAmB,QAAA,GAAK,eAAU,EAACd,QAAQ;IAAA;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3C,CAAC;AAEd;AAACrB,EAAA,CAxDQD,OAAO;AAAA6B,EAAA,GAAP7B,OAAO;AA0DhB,eAAe8B,IAAI;AAAC,IAAAD,EAAA;AAAAE,YAAA,CAAAF,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}